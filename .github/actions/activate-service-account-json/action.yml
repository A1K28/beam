name: "GCP Service Account Activator"
description: |
  Authenticates to GCP using a service account key. Optionally
  installs and configures the gcloud SDK.

# The 'export_default_credentials' input is no longer needed, as this is the
# default behavior of the new 'auth' action.
inputs:
  project_id:
    description: "GCP project ID to configure"
    required: false
  service_account_key:
    description: "Raw JSON service account key"
    required: true
  install_sdk:
    description: "Whether to invoke setup-gcloud to install/configure the SDK."
    required: false
    default: "true"

outputs:
  active_account:
    description: "The currently active gcloud account (if SDK is installed)"

runs:
  using: "composite"
  steps:
    # This step securely handles the service account key, creates the credentials
    # file, and configures Application Default Credentials (ADC).
    # It replaces the manual 'write file' and 'cleanup' steps.
    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ inputs.service_account_key }}'

    # This step now only installs the gcloud SDK and sets the project.
    # It runs conditionally based on your 'install_sdk' input.
    - name: Set up Cloud SDK
      if: ${{ inputs.install_sdk == 'true' }}
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        project_id: '${{ inputs.project_id }}'

    # This verification step remains useful for debugging.
    - name: Verify active GCP identity
      if: ${{ inputs.install_sdk == 'true' }}
      shell: bash
      run: |
        echo "gcloud configured project: $(gcloud config get-value project)"
        ACTIVE_ACCOUNT=$(gcloud config get-value account)
        echo "gcloud active account: $ACTIVE_ACCOUNT"
        echo "active_account=$ACTIVE_ACCOUNT" >> "$GITHUB_OUTPUT"

    # Docker authentication remains the same.
    - name: Authenticate Docker (if SDK installed)
      if: ${{ inputs.install_sdk == 'true' }}
      shell: bash
      run: |
        gcloud auth configure-docker --quiet